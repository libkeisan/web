var plugin=(()=>{var n=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var p=(s,e)=>{for(var a in e)n(s,a,{get:e[a],enumerable:!0})},g=(s,e,a,l)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of u(e))!b.call(s,t)&&t!==a&&n(s,t,{get:()=>e[t],enumerable:!(l=m(e,t))||l.enumerable});return s};var N=s=>g(n({},"__esModule",{value:!0}),s);var d={};p(d,{default:()=>I});var v=[{key:"m",aliases:["meter","meters"]},{key:"mm",aliases:["millimeter","millimeters"],base:{key:"m",factor:.001}},{key:"cm",aliases:["centimeter","centimeters"],base:{key:"m",factor:.01}},{key:"km",aliases:["kilometer","kilometers"],base:{key:"m",factor:1e3}},{key:"um",aliases:["micrometer","micrometers","\u03BCm"],base:{key:"m",factor:1e-6}},{key:"nm",aliases:["nanometer","nanometers"],base:{key:"m",factor:1e-9}},{key:"in",aliases:["inch","inches"],base:{key:"m",factor:.0254}},{key:"ft",aliases:["foot","feet"],base:{key:"m",factor:.3048}},{key:"yd",aliases:["yard","yards"],base:{key:"m",factor:.9144}},{key:"mi",aliases:["mile","miles"],base:{key:"m",factor:1609.344}},{key:"nmi",aliases:["nautical mile","nautical miles"],base:{key:"m",factor:1852}},{key:"g",aliases:["gram","grams"]},{key:"kg",aliases:["kilogram","kilograms"],base:{key:"g",factor:1e3}},{key:"t",aliases:["tonne","tonnes"],base:{key:"kg",factor:1e3}},{key:"ton",aliases:["tons"],base:{key:"kg",factor:907.18474}},{key:"oz",aliases:["ounce","ounces"],base:{key:"g",factor:28.349523125}},{key:"lb",aliases:["pound","pounds"],base:{key:"g",factor:453.59237}},{key:"st",aliases:["stone","stones"],base:{key:"kg",factor:6.35029318}},{key:"l",aliases:["liter","liters"]},{key:"ml",aliases:["milliliter","milliliters"],base:{key:"l",factor:.001}},{key:"gal",aliases:["gallon","gallons"],base:{key:"l",factor:3.785411784}},{key:"qt",aliases:["quart","quarts"],base:{key:"l",factor:.946352946}},{key:"pt",aliases:["pint","pints"],base:{key:"l",factor:.473176473}},{key:"floz",aliases:["fl oz","fluid ounce","fluid ounces"],base:{key:"l",factor:.0295735295625}},{key:"cup",aliases:["cups"],base:{key:"l",factor:.2365882365}},{key:"tbsp",aliases:["tablespoon","tablespoons"],base:{key:"l",factor:.01478676478125}},{key:"tsp",aliases:["teaspoon","teaspoons"],base:{key:"l",factor:.00492892159375}}],c=v;var f=s=>{for(let e of c)if([e.key,...e.aliases].includes(s.toLowerCase()))return e;return null},E=(s,e,a)=>{if(e.key===a.key)return s;if(e.base?.key===a.key)return s*e.base.factor;if(a.base?.key===e.key)return s/a.base.factor;if(e.base?.key!==a.base?.key||!e.base||!a.base)throw new Error("incompatible units");let l=e.base.factor/a.base.factor;return s*l},I={rules:[{str:`
        convert: I_TO | I_AS | I_IN
        (NUMBER IDENT+ | IDENT+ NUMBER) convert IDENT+ -> cast
      `,after:"binop"}],action:(s,e)=>{let a,l,t,k;for(let i of e)switch(i.type){case"NUMBER":a=i.value;break;case"IDENT":if(["TO","AS","IN"].includes(i.value.toUpperCase())){k=i.value;break}k?t?t+=" "+i.value:t=i.value:l?l+=" "+i.value:l=i.value;break}if(!a||!l||!t)return null;keisan.log(JSON.stringify({num:a,src:l,dst:t}));let r=f(l),o=f(t);if(!r||!o)return null;keisan.log(JSON.stringify({srcUnit:r,dstUnit:o}));let y=E(a.value,r,o);return keisan.log(JSON.stringify({result:y})),[{type:"NUMBER",value:{value:y}},{type:"IDENT",value:o.key}]}};return N(d);})();
